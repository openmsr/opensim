Metadata-Version: 2.1
Name: Opensim
Version: 1.0
Summary: OpenMC customized toolkit simulation
Home-page: UNKNOWN
Author: Copenhagen Atomics
Author-email: lorenzo.chierici@copenhagenatomics.com
License: UNKNOWN
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: End Users/Desktop
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Topic :: Scientific/EngineeringProgramming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Requires-Python: >=3.6
License-File: LICENSE

This Python package automatically runs OpenMC h5m CAD based simulation.

# Installation

```bash
pip install opensim
```

# How to run
The package can be launch from the command-line typing "simrun".

A previously generated DAGMC .h5m geometry file needs to provided as
positional argument.

# Arguments
See simrun --help

- Positional arguments:
```bash
  path                  the path to h5m_filename
```
- Optional arguments:
```bash
  -h, --help            show this help message and exit
  -r {run,plot-geom}, --runmode {run,plot-geom}
                        Run mode: "run" or "plot-geometry"
  -b BATCHES, --batches BATCHES
                        Number of batches
  -p PARTICLES, --particles PARTICLES
                        Number of particles
  -i INACTIVE, --inactive INACTIVE
                        Number of inactive batches
  --plotgeom            Plot geometry on defined planes
  --planes {xy,yz,xz,vox} [{xy,yz,xz,vox} ...]
                        2D-Planes for geometry plotting and mesh tallies if
                        'vox' argument provided, 3D-voxels are made for
                        ParaView vtk visualization.
  --meshsize MESHSIZE   Mesh size resolution
  --materialdata {msre,are,onion,calandria}
                        Reactor materials data
  --meshscores {flux,absorption,fission} [{flux,absorption,fission} ...]
                        Mesh scores to tally on planes
  --coredim COREDIM [COREDIM ...]
                        Reactor core xyz dimensions space separated: lower x,
                        lower y, lower z, upper x, upper y, upper z. By
                        default 'msre' reactor core dimension.
  --power POWER         Reactor thermal power [MW]
  --calcdose            Calculate dose. Be aware that if dose calculation is
                        enabled, a detector need to be defined.
  --detmat DETMAT       Detector material for dose calculation. Default is
                        ICRU.
  --detvol DETVOL       Detector volume. Default is [cm3], volume of phantom
                        human body.
  --particle {neutron,photon} [{neutron,photon} ...]
                        Particles to simulate. Default is coupled neutron-
                        photon.
  --calcreac            Calculate reaction rates. If enabled, materials where
                        to calculate reaction rates need to be provided.
  --reacmat REACMAT [REACMAT ...]
                        Materials to calculate reaction rate on
```

#Example
Run MSRE.h5m geometry file, with 100000 particles and 100 batches. Coredim takes the
dimension of the reactor vessel for initializing neutron distribution. Providing plotgeom argument
will plot the geometry on xy,yz,zx planes. The appropriate MSRE package material data is gievn.
Meshscores argument will score tallies on the same geomtry planes.

```bash
simrun msre.h5m -p 1000000 -b 100 --coredim -75 -75 0 75 75 250 --plotgeom
--materialdata msre --meshscores flux absorption fission
```


